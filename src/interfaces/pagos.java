/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import Clases.Utilidades;
import Clases.mysql;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yan_t
 */
public final class pagos extends javax.swing.JInternalFrame {

    /**
     * Creates new form pagos
     */
    public pagos() {
        initComponents();
        this.llenarcombo();
        this.editrows();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pago_panel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        numero_parqueo = new javax.swing.JTextField();
        fecha_entrada = new javax.swing.JLabel();
        tipo_parqueo = new javax.swing.JLabel();
        fecha_salida = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        data_ticket = new JTable(){

            public boolean isCellEditable(int rowIndex, int colIndex) {

                return false; //Las celdas no son editables.

            }
        };
        total = new javax.swing.JTextField();
        label14 = new javax.swing.JLabel();
        pago_pan = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        detalle_pago = new JTable(){

            public boolean isCellEditable(int rowIndex, int colIndex) {

                return false; //Las celdas no son editables.

            }
        };
        label11 = new javax.swing.JLabel();
        tipo_pago = new javax.swing.JComboBox<>();
        label10 = new javax.swing.JLabel();
        monto_pago = new javax.swing.JTextField();
        insertar = new javax.swing.JButton();
        total_pago = new javax.swing.JTextField();
        label12 = new javax.swing.JLabel();
        label13 = new javax.swing.JLabel();
        efectivo_cliente = new javax.swing.JTextField();
        tipo_parqueo4 = new javax.swing.JLabel();
        devolucion = new javax.swing.JTextField();
        procesar_pago = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Realizar Pagos");
        setToolTipText("");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Informacion Tickets", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(0, 51, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Numero Tickers:");
        jLabel1.setFocusable(false);

        numero_parqueo.setToolTipText("");
        numero_parqueo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        numero_parqueo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                numero_parqueoFocusLost(evt);
            }
        });
        numero_parqueo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numero_parqueoActionPerformed(evt);
            }
        });

        fecha_entrada.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        fecha_entrada.setText("Fecha Ent.:");
        fecha_entrada.setFocusable(false);

        tipo_parqueo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tipo_parqueo.setText("Tipo Parqueo:");
        tipo_parqueo.setFocusable(false);

        fecha_salida.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        fecha_salida.setText("Fecha Sal.:");
        fecha_salida.setFocusable(false);

        data_ticket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        data_ticket.setEditingColumn(0);
        data_ticket.setEditingRow(0);
        data_ticket.setEnabled(false);
        data_ticket.setOpaque(false);
        data_ticket.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(data_ticket);
        data_ticket.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        total.setEditable(false);
        total.setBackground(new java.awt.Color(204, 204, 204));
        total.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        total.setForeground(new java.awt.Color(51, 51, 255));
        total.setText("0.00");
        total.setToolTipText("");
        total.setFocusable(false);

        label14.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        label14.setText("Total:");
        label14.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(377, 377, 377))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(label14)
                .addGap(17, 17, 17)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(numero_parqueo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fecha_entrada, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(fecha_salida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tipo_parqueo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numero_parqueo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fecha_entrada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fecha_salida)
                    .addComponent(tipo_parqueo))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label14)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pago_pan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de Pagos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 255))); // NOI18N
        pago_pan.setPreferredSize(new java.awt.Dimension(518, 244));

        detalle_pago.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descripcion", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        detalle_pago.setToolTipText("Doble Click Seleccionar");
        detalle_pago.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(detalle_pago);
        detalle_pago.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (detalle_pago.getColumnModel().getColumnCount() > 0) {
            detalle_pago.getColumnModel().getColumn(0).setResizable(false);
            detalle_pago.getColumnModel().getColumn(1).setResizable(false);
            detalle_pago.getColumnModel().getColumn(2).setResizable(false);
        }

        label11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        label11.setText("Tipo Pago");
        label11.setFocusable(false);

        tipo_pago.setToolTipText("Tipo Pago");
        tipo_pago.setEnabled(false);
        tipo_pago.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tipo_pagoFocusLost(evt);
            }
        });

        label10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        label10.setText("Monto");
        label10.setFocusable(false);

        monto_pago.setToolTipText("Monto a Pagar");
        monto_pago.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        monto_pago.setEnabled(false);
        monto_pago.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                monto_pagoFocusLost(evt);
            }
        });
        monto_pago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monto_pagoActionPerformed(evt);
            }
        });
        monto_pago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                monto_pagoKeyPressed(evt);
            }
        });

        insertar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/insert.png"))); // NOI18N
        insertar.setToolTipText("Insertar");
        insertar.setEnabled(false);
        insertar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                insertarFocusLost(evt);
            }
        });
        insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarActionPerformed(evt);
            }
        });
        insertar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                insertarKeyPressed(evt);
            }
        });

        total_pago.setEditable(false);
        total_pago.setBackground(new java.awt.Color(204, 204, 204));
        total_pago.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        total_pago.setForeground(new java.awt.Color(51, 51, 255));
        total_pago.setText("0.00");
        total_pago.setToolTipText("Total");
        total_pago.setFocusable(false);

        label12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        label12.setText("Total:");
        label12.setFocusable(false);

        label13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        label13.setText("Efectivo:");
        label13.setFocusable(false);

        efectivo_cliente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        efectivo_cliente.setToolTipText("Monto a Pagar");
        efectivo_cliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        efectivo_cliente.setEnabled(false);
        efectivo_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                efectivo_clienteFocusLost(evt);
            }
        });
        efectivo_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                efectivo_clienteActionPerformed(evt);
            }
        });

        tipo_parqueo4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tipo_parqueo4.setText("Devolución:");
        tipo_parqueo4.setFocusable(false);

        devolucion.setEditable(false);
        devolucion.setBackground(new java.awt.Color(204, 204, 204));
        devolucion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        devolucion.setForeground(new java.awt.Color(51, 51, 255));
        devolucion.setText("0.00");
        devolucion.setToolTipText("Monto a Pagar");
        devolucion.setFocusable(false);

        javax.swing.GroupLayout pago_panLayout = new javax.swing.GroupLayout(pago_pan);
        pago_pan.setLayout(pago_panLayout);
        pago_panLayout.setHorizontalGroup(
            pago_panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pago_panLayout.createSequentialGroup()
                .addComponent(label13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(efectivo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tipo_parqueo4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(devolucion, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label12)
                .addGap(17, 17, 17)
                .addComponent(total_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane2)
            .addGroup(pago_panLayout.createSequentialGroup()
                .addGroup(pago_panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tipo_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73)
                .addGroup(pago_panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monto_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(insertar))
        );
        pago_panLayout.setVerticalGroup(
            pago_panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pago_panLayout.createSequentialGroup()
                .addGroup(pago_panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pago_panLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pago_panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label11)
                            .addComponent(label10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pago_panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tipo_pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monto_pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                    .addGroup(pago_panLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pago_panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label12)
                    .addComponent(total_pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label13)
                    .addComponent(efectivo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipo_parqueo4)
                    .addComponent(devolucion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        procesar_pago.setBackground(new java.awt.Color(102, 102, 102));
        procesar_pago.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        procesar_pago.setForeground(new java.awt.Color(255, 255, 255));
        procesar_pago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/process.png"))); // NOI18N
        procesar_pago.setText("Procesar");
        procesar_pago.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        procesar_pago.setEnabled(false);
        procesar_pago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procesar_pagoActionPerformed(evt);
            }
        });

        Eliminar.setBackground(new java.awt.Color(102, 102, 102));
        Eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Eliminar.setForeground(new java.awt.Color(255, 255, 255));
        Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/minus.png"))); // NOI18N
        Eliminar.setText("Eliminar");
        Eliminar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Eliminar.setEnabled(false);
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        cancelar.setBackground(new java.awt.Color(102, 102, 102));
        cancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cancelar.setForeground(new java.awt.Color(255, 255, 255));
        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Cancel.png"))); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pago_panelLayout = new javax.swing.GroupLayout(pago_panel);
        pago_panel.setLayout(pago_panelLayout);
        pago_panelLayout.setHorizontalGroup(
            pago_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(pago_panelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(procesar_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pago_pan, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
        );
        pago_panelLayout.setVerticalGroup(
            pago_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pago_panelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pago_pan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pago_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(procesar_pago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pago_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pago_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void llenarcombo(){
        String query = "select codigo,descripcion from tipos_pagos where estado = 1";
        mysql cn = new mysql();
        ResultSet rs = cn.ejecutar(query);
        cn.desconectar();
        try {
            tipo_pago.addItem("Seleccione...");
            while(rs.next()){
                tipo_pago.addItem(rs.getString("descripcion"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(genTicker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    DefaultTableModel model;
    private void limpiar(){ 
       data_ticket.setModel(new DefaultTableModel());
       fecha_entrada.setText("Fecha Ent.:");
       fecha_salida.setText("Fecha Sal.:");
       tipo_parqueo.setText("Tipo Parqueo:");
       total.setText("0.00");
       numero_parqueo.setText("");
       numero_parqueo.requestFocus();
       tipo_pago.setSelectedIndex(0);
       monto_pago.setText("");
       DefaultTableModel model1 = (DefaultTableModel)detalle_pago.getModel();
       model1.setRowCount(0);
       efectivo_cliente.setText("");
       devolucion.setText("0.00");
       total_pago.setText("0.00");                   
        tipo_pago.setEnabled(false);
        monto_pago.setEnabled(false);
        insertar.setEnabled(false);
        detalle_pago.setEnabled(false);
        efectivo_cliente.setEnabled(false);
        Eliminar.setEnabled(false);
        procesar_pago.setEnabled(false);
       
    }
    private void editrows(){
        detalle_pago.addMouseListener(new MouseAdapter(){
            @Override
            public void mousePressed(MouseEvent me){
                JTable table = (JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if(me.getClickCount() == 2){
                    DefaultTableModel model1 = (DefaultTableModel) detalle_pago.getModel();
                    int index = detalle_pago.getSelectedRow();
                    tipo_pago.setSelectedItem(detalle_pago.getValueAt(index, 1));
                    monto_pago.setText(detalle_pago.getValueAt(index, 2).toString());
                    model1.removeRow(index);
                    total_pago.setText(sumarTotal());
                }
            }
        });
    }
    private void numero_parqueoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numero_parqueoFocusLost
        if( !"".equals(numero_parqueo.getText().trim())){
            if(Utilidades.isNumeric(numero_parqueo.getText().trim())){
                int numero = Integer.parseInt(numero_parqueo.getText().trim());
                String query = "call p_listar_parqueo("+numero+")";
                mysql cn = new mysql();
                ResultSet rs = cn.ejecutar(query);
                cn.desconectar();
                try {
                    if(rs.next() && rs.getInt("existe") == 1){
                       fecha_sali = rs.getString("fecha_completa");
                       String [] columnas = {"Numero","Descripcion","Horas","Precio","Subtotal"};
                       String [] registros = new String[5];
                       model = new DefaultTableModel( null,columnas);
                       fecha_entrada.setText("Fecha Ent.: "+rs.getString("fecha_entrada"));
                       fecha_salida.setText("Fecha Sal.: "+rs.getString("fecha_salida"));
                       tipo_parqueo.setText("Tipo Parqueo: "+rs.getString("tipo_parqueo"));
                       total.setText(rs.getString("monto"));
                        registros[0] = rs.getString("numero");
                        registros[1] = rs.getString("tipo_parqueo");
                        registros[2] =(rs.getInt("horas")<1)?"1":rs.getString("horas");
                        registros[3] = rs.getString("precio");
                        registros[4] = rs.getString("monto");
                        model.addRow(registros);
                       data_ticket.setModel(model);
                       tipo_pago.setEnabled(true);
                       monto_pago.setEnabled(true);
                       insertar.setEnabled(true);
                       detalle_pago.setEnabled(true);
                       efectivo_cliente.setEnabled(true);
                    }else{
                        JOptionPane.showMessageDialog(null,rs.getString("mensaje"));
                        data_ticket.setModel(new DefaultTableModel());
                       fecha_entrada.setText("Fecha Ent.:");
                       fecha_salida.setText("Fecha Sal.:");
                       tipo_parqueo.setText("Tipo Parqueo:");
                       total.setText("");

                       tipo_pago.setEnabled(false);
                       monto_pago.setEnabled(false);
                       insertar.setEnabled(false);
                       detalle_pago.setEnabled(false);
                       efectivo_cliente.setEnabled(false);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(genTicker.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null,"El valor debe ser numerico!");
                numero_parqueo.setText("");
                numero_parqueo.requestFocus();
                data_ticket.setModel(new DefaultTableModel());
                fecha_entrada.setText("Fecha Ent.:");
                fecha_salida.setText("Fecha Sal.:");
                tipo_parqueo.setText("Tipo Parqueo:");
                total.setText("");            
                tipo_pago.setEnabled(false);
                monto_pago.setEnabled(false);
                insertar.setEnabled(false);
                detalle_pago.setEnabled(false);
                efectivo_cliente.setEnabled(false);
            }
        }
        tipo_pago.requestFocus();
    }//GEN-LAST:event_numero_parqueoFocusLost

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
       limpiar();
    }//GEN-LAST:event_cancelarActionPerformed
    private boolean esDecimal(String cad){
        try {
          Double.parseDouble(cad);
          return true;  
        } catch (NumberFormatException ex) {
            return false;
        }
        
    }
    private void limpiar_campos_pago(){
        monto_pago.setText("");
        tipo_pago.setSelectedIndex(0);
    }
    private void insertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarActionPerformed
        // TODO add your handling code here:
        String CodTipPago = cod_tipo_pago(tipo_pago.getSelectedItem().toString());
        double monto_p = (esDecimal(monto_pago.getText()))?Double.parseDouble(monto_pago.getText()):0;
        DefaultTableModel model1 = (DefaultTableModel) detalle_pago.getModel();
        if((monto_p > 0 && (!"".equals(CodTipPago) && !"0".equals(CodTipPago)))){
            if((monto_p + Double.parseDouble(total_pago.getText().trim())) <= Double.parseDouble(total.getText().trim())){
                if(model1.getRowCount()>0){
                    int find = 0;
                    for (int i = 0; i < model1.getRowCount(); i++) {
                       String id  = model1.getValueAt(i,0).toString().trim();
                       if(id.equals(CodTipPago.trim())){
                           find = 1;
                           double montototal = monto_p + Double.parseDouble(model1.getValueAt(i, 2).toString().trim());
                           model1.setValueAt(Double.toString(montototal), i, 2);
                           limpiar_campos_pago();
                       }
                   }
                   if(find == 0){
                        model1.addRow(new Object[]{CodTipPago,tipo_pago.getSelectedItem().toString(),monto_pago.getText()});
                        limpiar_campos_pago();
                   }
                }else{
                    model1.addRow(new Object[]{CodTipPago,tipo_pago.getSelectedItem().toString(),monto_pago.getText()});
                    limpiar_campos_pago();
                }  
            }else{
                JOptionPane.showMessageDialog(null,"Ha excedido el monto a pagar del volante Con "+ Double.toString((monto_p + Double.parseDouble(total_pago.getText().trim())) - Double.parseDouble(total.getText().trim())) +"!");
                monto_pago.requestFocus();
            }
            if(model1.getRowCount()>0){
                Eliminar.setEnabled(true);
                procesar_pago.setEnabled(true);
            }else{
                Eliminar.setEnabled(false);
                procesar_pago.setEnabled(false);            
            }
            total_pago.setText(sumarTotal());
        }else{
            JOptionPane.showMessageDialog(null,"Seleccione el tipo de pago y digite monto!");
        }
    }//GEN-LAST:event_insertarActionPerformed
    
    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model1 = (DefaultTableModel) detalle_pago.getModel();
        if(detalle_pago.getSelectedRow() >= 0){
        
            if(model1.getRowCount() > 0){
                int id = detalle_pago.getSelectedRow();
                model1.removeRow(id);
                total_pago.setText(sumarTotal());
                if(model1.getRowCount() <= 0){            
                    Eliminar.setEnabled(false);
                    procesar_pago.setEnabled(false);
                }
            }else{
                Eliminar.setEnabled(false);
                procesar_pago.setEnabled(false);
                JOptionPane.showMessageDialog(null,"No hay registros para eliminar!");
            }
        
        }else{
            JOptionPane.showMessageDialog(null,"No ha seleccionado ningun registro!");
        }
    }//GEN-LAST:event_EliminarActionPerformed

    private void efectivo_clienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_efectivo_clienteFocusLost
        // TODO add your handling code here:
        if(esDecimal(efectivo_cliente.getText()) && !"0.00".equals(total_pago.getText())){
            devolucion.setText(Double.toString(Double.parseDouble(efectivo_cliente.getText())- Double.parseDouble(total_pago.getText())));
        }else{
            if(!"".equals(efectivo_cliente.getText())){
                JOptionPane.showMessageDialog(null, "Campo Numerico no admite letras!");
                efectivo_cliente.setText("");
            }
        }
        procesar_pago.requestFocus();
    }//GEN-LAST:event_efectivo_clienteFocusLost
    private String fecha_sali = "";
    private void procesar_pagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procesar_pagoActionPerformed
        // TODO add your handling code here:
        mysql cn = new mysql();
        numero_parqueo.requestFocus();
        if(!"".equals(numero_parqueo.getText()) && detalle_pago.getRowCount() > 0){            
            int numero = Integer.parseInt(this.numero_parqueo.getText().trim());
            if(Double.parseDouble(total_pago.getText()) == Double.parseDouble(total.getText())){
                String query = "call p_actuaizar_parqueos("+numero+",'"+fecha_sali+"',"+data_ticket.getValueAt(0, 2).toString()+","+total.getText()+")";        
                ResultSet rs = cn.ejecutar(query);
                try {
                    if(rs.next()){
                        if(rs.getInt("actualizado")==1){
                            query = "call p_registrar_pagos("+numero+","+total_pago.getText()+","+cod_user+")";
                            rs = cn.ejecutar(query);
                            int numero_pago=0;
                            if(rs.next()){
                                numero_pago = rs.getInt("numero_pago");
                                if(numero_pago > 0){
                                    int insertado = 0;
                                    DefaultTableModel model1 = (DefaultTableModel) detalle_pago.getModel();
                                    for (int i = 0; i < model1.getRowCount(); i++) {
                                        query = "call p_actualizar_detalles_pagos("+numero_pago+","+model1.getValueAt(i,0).toString()+","+model1.getValueAt(i,2).toString()+")";
                                        rs = cn.ejecutar(query);
                                        if(rs.next()){
                                            insertado = 1;
                                        }else{
                                            insertado = 0;
                                            break;
                                        }
                                    }
                                    if(insertado == 1){
                                        limpiar();
                                        JOptionPane.showMessageDialog(null, "Pago realizado satifactoriamente!");
                                    }else{
                                        JOptionPane.showMessageDialog(null, "Problema al general el pago!");                                    
                                    }
                                }
                            }
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(pagos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Cantidad a pagar esta por debajo de la deuda!");
            }
        } 
        cn.desconectar();
    }//GEN-LAST:event_procesar_pagoActionPerformed

    private void tipo_pagoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tipo_pagoFocusLost
        // TODO add your handling code here:
       //if(monto_pago.isEnabled()) monto_pago.requestFocus();
    }//GEN-LAST:event_tipo_pagoFocusLost

    private void numero_parqueoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numero_parqueoActionPerformed
        // TODO add your handling code here:
        //if(tipo_pago.isEnabled())tipo_pago.requestFocus();
    }//GEN-LAST:event_numero_parqueoActionPerformed

    private void monto_pagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monto_pagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monto_pagoActionPerformed

    private void insertarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_insertarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           insertar.doClick();
           tipo_pago.requestFocus();
        }
    }//GEN-LAST:event_insertarKeyPressed

    private void insertarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_insertarFocusLost
        // TODO add your handling code here:
        //if(efectivo_cliente.isEnabled())efectivo_cliente.requestFocus();
    }//GEN-LAST:event_insertarFocusLost

    private void efectivo_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_efectivo_clienteActionPerformed
        // TODO add your handling code here:
        //if(procesar_pago.isEnabled())procesar_pago.requestFocus();
    }//GEN-LAST:event_efectivo_clienteActionPerformed

    private void monto_pagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monto_pagoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           insertar.doClick();
           if(tipo_pago.isEnabled())tipo_pago.requestFocus();
        }
    }//GEN-LAST:event_monto_pagoKeyPressed

    private void monto_pagoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monto_pagoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_monto_pagoFocusLost
    private String sumarTotal(){
        double montototal = 0;
        if(detalle_pago.getRowCount()>0){
            for (int i = 0; i < detalle_pago.getRowCount(); i++) {
               montototal = montototal + Double.parseDouble(detalle_pago.getValueAt(i, 2).toString().trim());
            }
          return Double.toString(montototal);
        }
        return "0";
    }
    private String cod_tipo_pago(String descripcion){
        String query = "select codigo from tipos_pagos where descripcion = '"+tipo_pago.getSelectedItem().toString()+"' and estado = 1";
        mysql cn = new mysql();
        ResultSet rs = cn.ejecutar(query);
        cn.desconectar();
        try {
            if(rs.next()){
                return rs.getString("codigo");
            }else{
                return "0";
            }
        } catch (SQLException ex) {
            Logger.getLogger(pagos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "0";
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton cancelar;
    private javax.swing.JTable data_ticket;
    private javax.swing.JTable detalle_pago;
    private javax.swing.JTextField devolucion;
    private javax.swing.JTextField efectivo_cliente;
    private javax.swing.JLabel fecha_entrada;
    private javax.swing.JLabel fecha_salida;
    private javax.swing.JButton insertar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel label10;
    private javax.swing.JLabel label11;
    private javax.swing.JLabel label12;
    private javax.swing.JLabel label13;
    private javax.swing.JLabel label14;
    private javax.swing.JTextField monto_pago;
    private javax.swing.JTextField numero_parqueo;
    private javax.swing.JPanel pago_pan;
    private javax.swing.JPanel pago_panel;
    private javax.swing.JButton procesar_pago;
    private javax.swing.JComboBox<String> tipo_pago;
    private javax.swing.JLabel tipo_parqueo;
    private javax.swing.JLabel tipo_parqueo4;
    private javax.swing.JTextField total;
    private javax.swing.JTextField total_pago;
    // End of variables declaration//GEN-END:variables
    private int cod_user;
    void setCodigoUsuario(int cod_user) {
        this.cod_user = cod_user;
    }
}
